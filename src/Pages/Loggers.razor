@page "/loggers"
@inject ActuatorService Service

<h1>Loggers</h1>

@if (data == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <dl>
        @foreach(var logger in data.Loggers)
        {
            <dt>@(logger.Key)</dt>
            <dd>
                @foreach(var level in data.Levels)
                {
                    <label>
                        <input type="radio" name="@(logger.Key)" value="@level" 
                            @onchange="async () => await SetLogLevel(logger.Key, level)"
                            checked=@(logger.Value.EffectiveLevel == level) />
                        @level
                    </label>
                }
            </dd>
        }
    </dl>
}

@code {
    private LoggerResponse data;

    protected override async Task OnInitializedAsync()
    {
        data = await Service.GetLoggers();
    }

    // TODO this should probably use model binding and a form ¯\_(ツ)_/¯
    private async Task SetLogLevel(string logger, string level)
    {
        await Service.SetLoggerLevel(logger, level);
    }
}
